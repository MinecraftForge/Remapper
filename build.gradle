buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'net.sf.proguard:proguard-gradle:5.2.1'
    }
}
plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecrell.licenser' version '0.4.1'
    id 'org.ajoberstar.grgit' version '3.1.1'
    id 'com.github.ben-manes.versions' version '0.24.0'
    id 'com.github.johnrengelman.shadow' version '5.1.0'
}


repositories {
    mavenCentral()
    maven {
        name = "forge"
        url = "http://files.minecraftforge.net/maven"
    }
    flatDir {
        name "fileRepo"
        dirs "repo"
    }
}

group = 'net.minecraftforge'
archivesBaseName = 'remapper'
version = gitVersion()
targetCompatibility = sourceCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'
def gitVersion() {
    def raw = grgit.describe(longDescr: true, tags:true)
    def desc = (raw == null ? 'unknown-offset-hash' : raw).split('-') as List
    def hash = desc.remove(desc.size() - 1)
    def offset = desc.remove(desc.size() - 1)
    def tag = desc.join('-')
    def branch = grgit.branch.current().name
    project.ext.SPEC_VERSION = tag
    return "${tag}.${offset}${t -> if (branch != 'master') t << '-' + branch}"
}

ext {
    CHANGELOG = rootProject.file('build/changelog.txt')
    MAIN_CLASS = 'net.minecraftforge.remapper.RemapperMain'
    MANIFEST = manifest{
        attributes('Main-Class': MAIN_CLASS)
        attributes([
            'Specification-Title':      'DePigifier',
            'Specification-Vendor':     'Forge Development LLC',
            'Specification-Version':    project.version,
            'Implementation-Title':     'DePigifier',
            'Implementation-Version':   project.version,
            'Implementation-Vendor':    'Forge Development LLC'
        ] as LinkedHashMap, 'net/minecraftforge/depigifier/')
    }
}

dependencies {
    compile 'net.sf.jopt-simple:jopt-simple:4.5'
    compile 'com.google.code.gson:gson:2.7'
    compile 'de.siegmar:fastcsv:1.0.3'
    compile('net.minecraftforge:Srg2Source:5.0.+:fatjar'){
        transitive = false
    }
    compile 'net.minecraftforge:srgutils:0.2.+'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

jar {
    manifest.from(MANIFEST)
}

shadowJar {
    classifier 'fatjar'
    manifest.from(MANIFEST)
}
build.dependsOn shadowJar

license {
    header = file('LICENSE-header.txt')
    ext {
        projectName = 'Remapper'
    }
}

/*
task shrinkJar(type: proguard.gradle.ProGuardTask, dependsOn: fatJar) {
    inputs.file fatJar.archivePath
    ext {
        outDir = file("${buildDir}/proguard")
        obfuscatedJar = "${outDir}/${jar.baseName}.jar"
    }
    outDir.mkdirs()

    injars jar.archivePath
    outjars obfuscatedJar
    //libraryjars configurations.compile
    configuration 'proguard.pro'
}

task shrunkJar(type: Jar, dependsOn: shrinkJar) {
    classifier = 'shrunk'
    from zipTree(shrinkJar.obfuscatedJar)
    manifest { attributes 'Main-Class': main_class }
}
Need to figure out how to get proguard to work right so we can shrink the jar...
*/

artifacts {
    archives sourcesJar
    archives shadowJar
}
//configurations.runtime.artifacts.removeAll { it.archiveTask.is fatJar }

publishing {
    publications {
        mavenJava(MavenPublication) {
            if (CHANGELOG.exists()) {
                artifact(CHANGELOG) {
                    classifier = 'changelog'
                }
            }
            artifact jar
            artifact shadowJar
            
            pom {
                name = project.archivesBaseName
                description = 'Srg2Source remapper'
                url = 'https://github.com/MinecraftForge/Remapper'

                scm {
                    url = 'https://github.com/MinecraftForge/Remapper'
                    connection = 'scm:git:git://github.com/MinecraftForge/Remapper.git'
                    developerConnection = 'scm:git:git@github.com:MinecraftForge/Remapper.git'
                }

                issueManagement {
                    system = 'github'
                    url = 'https://github.com/MinecraftForge/Remapper/issues'
                }

                licenses {
                    license {
                        name = 'LGPLv2.1'
                        url = 'https://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt'
                    }
                }

                developers {
                    developer {
                        id = 'LexManos'
                        name = 'LexManos'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            if (project.hasProperty('forgeMavenPassword')) {
                credentials {
                    username project.properties.forgeMavenUser
                    password project.properties.forgeMavenPassword
                }
                url 'https://files.minecraftforge.net/maven/manage/upload'
            } else {
                url 'file://' + rootProject.file('repo').getAbsolutePath()
            }
        }
    }
}

wrapper {
    gradleVersion = '5.5'
}
